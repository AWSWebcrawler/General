from io import StringIO
import lxml
from lxml import etree
from lxml.cssselect import CSSSelector

"""The item factory parses the passed html text and extracts the desired attributes. The attributes are then stored in a
dictionary and returned."""

def create_item(html):
    """The dictionary contains the attributes als name:value pairs. The value is generated by a method call. """
    parser = etree.HTMLParser()
    tree = etree.parse(StringIO(html), parser)

    dic = {
        "name": get_name(tree),
        "product_id": get_product_id(tree),
        "price": get_price(tree),
        "price_regular": get_price_regular(tree),
        "prime": get_prime(tree),
        "discount": get_discount(tree),
        "selled_by_amazon": get_selled_by_amazon(tree),
        "seller": get_seller(tree),
        "asin": get_asin(tree),
        "url": get_url(tree),
        "timestamp": get_timestamp(tree),
        "time": get_time(tree),
        "date": get_date(tree),

    }
    return dic


"""The individual methods receive the html text. Select the correct values using the appropriate html tags. 
Validate whether the values make any sense at all and, if necessary, 
transform the values to get the desired return value."""


def get_name(tree):
    """select, validate and transform the name from the html"""
    name = ""
    span_elements = tree.findall('.//span')
    for span in span_elements:
        try:
            if span.attrib['id'] == "productTitle":
                name = span.text.strip()
        except:
            pass
    if name != "":
        return name
    else:
        return "Name wurde nicht gefunden"

def get_price(tree):
    """select, validate and transform the price from the html"""
    pass

def get_selled_by_amazon(tree):
    """select, validate and transform the price from the html"""
    pass

def get_date(tree):
    pass


def get_time(tree):
    pass


def get_timestamp(tree):
    pass


def get_url(tree):
    pass


def get_asin(tree):
    pass


def get_seller(tree):
    pass


def get_discount(tree):
    pass


def get_prime(tree):
    pass


def get_price_regular(tree):
    pass


def get_product_id(tree):
    pass

